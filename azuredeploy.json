{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "siteName": {
            "type": "string",
            "metadata": {
                "description": "Name of the function app, will be hosted at .azurewebsites.net"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "In which location to provision the function app and storage account"
            },
            "allowedValues": [
                "Central US",
                "North Europe",
                "West Europe",
                "Southeast Asia",
                "Korea Central",
                "Korea South",
                "West US",
                "East US",
                "Japan West",
                "Japan East",
                "East Asia",
                "East US 2",
                "North Central US",
                "South Central US",
                "Brazil South",
                "Australia East",
                "Australia Southeast",
                "West India",
                "Central India",
                "South India",
                "Canada Central",
                "Canada East",
                "West Central US",
                "UK West",
                "UK South",
                "West US 2",
                "France Central"
            ]
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "runFromPackage": {
            "type": "string",
            "defaultValue": "https://github.com/vidarkongsli/kudu-to-slack-func/releases/download/v0.0.1/82bfe5892.zip"
        }
    },
    "variables": {
        "hostingPlanName": "[concat(parameters('siteName'), '-plan')]",
        "storageAccountName": "[concat(take(replace(parameters('siteName'),'-',''),11), uniqueString(resourceGroup().id))]",
        "location": "[parameters('location')]"
    },
    "resources": [
        {
            "apiVersion": "2015-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[parameters('siteName')]",
            "location": "[variables('location')]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables ('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[parameters('siteName')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "[parameters('runFromPackage')]"
                        }
                    ],
                    "phpVersion": "",
                    "pythonVersion": "",
                    "javaVersion": null,
                    "ftpsState": "Disabled"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-12-01",
            "location": "[variables('location')]",
            "kind": "Storage",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            }
        },
        {
            "comments": "",
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "name": "[variables('hostingPlanName')]",
            "apiVersion": "2016-09-01",
            "location": "[variables('location')]",
            "scale": null,
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "workerTierName": null,
                "adminSiteName": null,
                "hostingEnvironmentProfile": null,
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            },
            "dependsOn": []
        }
    ],
    "outputs": {}
}